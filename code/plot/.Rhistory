pp
pp = ggplot()
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=From_State, x=0 ))
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=To_State, x=1 ))
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.50, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean, colour="gray"))
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.95, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean, colour="black"))
#pp = pp + annotate( "text", x=0, y=24:1, label=state_lbl)
#pp = pp + annotate( "text", x=1, y=24:1, label=state_lbl)
pp
#, aes(x=To_State, y=From_State, fill=Mean) )
pp = ggplot()
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=From_State, x=0 ))
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=To_State, x=1 ))
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.50, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean, col="gray"))
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.95, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean, col="black"))
#pp = pp + annotate( "text", x=0, y=24:1, label=state_lbl)
#pp = pp + annotate( "text", x=1, y=24:1, label=state_lbl)
pp
#, aes(x=To_State, y=From_State, fill=Mean) )
dat_plot = cbind( melt(mean_event), melt(prob_event)[3] )
colnames(dat_plot) = c("From_State","To_State", "Mean", "Prob")
dat_plot$From_State = factor(dat_plot$From_State, ordered=T, levels=rev(dat_plot$From_State))
dat_plot$To_State = factor(dat_plot$To_State, ordered=T, levels=rev(dat_plot$To_State))
pp = ggplot()
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=From_State, x=0 ))
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=To_State, x=1 ))
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.50, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean), col="gray")
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.95, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean), col="black")
#pp = pp + annotate( "text", x=0, y=24:1, label=state_lbl)
#pp = pp + annotate( "text", x=1, y=24:1, label=state_lbl)
pp
#, aes(x=To_State, y=From_State, fill=Mean) )
pp = ggplot()
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=From_State, x=0 ))
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=To_State, x=1 ))
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.50, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean), col="gray", arrow=1)
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.95, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean), col="black", arrow=1)
#pp = pp + annotate( "text", x=0, y=24:1, label=state_lbl)
#pp = pp + annotate( "text", x=1, y=24:1, label=state_lbl)
pp
arrow()
pp = ggplot()
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=From_State, x=0 ))
#pp = pp + geom_point( data=dat_plot, mapping=aes( y=To_State, x=1 ))
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.50, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean), col="gray", arrow=arrow())
pp = pp + geom_segment( data=dat_plot[ dat_plot$Prob > 0.95, ], mapping=aes( x=0, xend=1, y=From_State, yend=To_State, lwd=Mean), col="black", arrow=arrow())
#pp = pp + annotate( "text", x=0, y=24:1, label=state_lbl)
#pp = pp + annotate( "text", x=1, y=24:1, label=state_lbl)
pp
# convert from posterior samples
mean_event = rowSums(state_bins,dims=2) * (1/n_iter)
prob_event = rowSums(hit_bins,dims=2) * (1/n_iter)
# convert from posterior samples
mean_event = rowSums(state_bins,dims=2) * (1/n_iter)
prob_event = rowSums(hit_bins,dims=2) * (1/n_iter)
# format & filter
rownames(mean_event)=state_lbl; colnames(mean_event)=state_lbl
rownames(prob_event)=state_lbl; colnames(prob_event)=state_lbl
mean_event
mean_event
mean_event2 = mean_event
mean_event2 = mean_event2 / sum(mean_event2)
mean_event2
# convert from posterior samples
mean_event = rowSums(state_bins,dims=2) * (1/n_iter)
prob_event = rowSums(hit_bins,dims=2) * (1/n_iter)
# format & filter
rownames(mean_event)=state_lbl; colnames(mean_event)=state_lbl
rownames(prob_event)=state_lbl; colnames(prob_event)=state_lbl
mean_event = mean_event / sum(mean_event)
###################
## Stage 4: plot ##
###################
# build graph
g <- graph.adjacency(mean_event, weighted=T, mode="directed")
# assign edget weights, order, etc.
weights = E(g)$weight
edge_order = order(E(g)$weight)
new_edges = data.frame(from=NA, to=NA, weight=NA)
new_weights = rep(0, length(weights))
for (i in 1:length(edge_order)) {
j = edge_order[i]
new_edges[i,] = c( get.edgelist(g)[j,], E(g)$weight[j] )
}
new_edges$weight = as.numeric(new_edges$weight)
# reformat graph
g <- graph_from_data_frame(d = new_edges, vertices = state_lbl )
# coordinates
coords = layout_in_circle(g)
if (T) {
coords[01:06,1] = coords[01:06,1] + 1/6 # + c(0.5, 0.5)
coords[01:06,2] = coords[01:06,2] + 1/6 # + c(0.5, 0.5)
coords[07:12,1] = coords[07:12,1] - 1/6 # + c(0.5, 0.5)
coords[07:12,2] = coords[07:12,2] + 1/6 # + c(0.5, 0.5)
coords[13:18,1] = coords[13:18,1] - 1/6 # + c(0.5, -0.5)
coords[13:18,2] = coords[13:18,2] - 1/6 # + c(0.5, -0.5)
coords[19:24,1] = coords[19:24,1] + 1/6 # + c(0.5, 0.5)
coords[19:24,2] = coords[19:24,2] - 1/6 # + c(0.5, 0.5)
}
coords[,1]-0.3
scale_factor = 8
coord_labels = (scale_factor*1.5)*coords
coords = scale_factor*coords
lab.locs = radian.rescale(x=1:24, start=0, direction=-1)
xlim<-ylim<-c(-1.3*scale_factor,1.3*scale_factor)
# colors
biome_colors =  c( rep("red",6), rep("darkgreen",6), rep("dodgerblue",6), rep("darkblue", 6))
mark_biome_colors = c("red","darkgreen","dodgerblue","darkblue")
mark_biome_colors = adjustcolor( mark_biome_colors, alpha.f=0.2 )
area_colors = rep( c("magenta","red","green","gold","cyan","blue"), 4)
mark_groups = list( 1:6, 7:12, 13:18, 19:24 )
# apply/rescale colors with graph
V(g)$color = biome_colors
V(g)$label.cex = 0.6
E(g)$color = "black"
# determine edge color (darkness) scale
f_col = 2
n_col = max(E(g)$weight) * f_col
edge_colors = rev(gray.colors(n=n_col+1, start=0.0, end=0.8))[ as.integer( E(g)$weight*f_col )+1 ]
# plot system
plot_pdf_fn = paste(plot_fp, base_fn,".",option_str,".pp_",(1.0-th)*100, ".transition_graph.pdf", sep="")
CairoPDF( plot_pdf_fn, height=6, width=6 )
plot.igraph(g,
asp=0,xlim=xlim,ylim=ylim,
layout=coords,
vertex.size=80,
rescale=F,
vertex.color=area_colors,
vertex.frame.color=biome_colors,
vertex.frame.width=30,
vertex.label.dist=30,
vertex.label.degree=lab.locs,
mark.groups=mark_groups,
mark.col=mark_biome_colors,
mark.border=NA,
mark.expand=100,
mark.shape=-1/2,
edge.width=2, #E(g)$weight,
edge.arrow.size=0.5, #(E(g)$weight/max(E(g)$weight))^2,
edge.color=edge_colors,
edge.curved=seq(-1*curve, 1*curve, length = ecount(g)))
#legend('left',legend=seq(0.2,1.0,by=0.1), lwd=2, col=rev(gray.colors(n=6, start=0.0, end=0.8))) #,pt.cex=scaled,col='black',pch=21, pt.bg='orange')
dev.off()
mean_event = rowSums(state_bins,dims=2) * (1/n_iter)
prob_event = rowSums(hit_bins,dims=2) * (1/n_iter)
# format & filter
rownames(mean_event)=state_lbl; colnames(mean_event)=state_lbl
rownames(prob_event)=state_lbl; colnames(prob_event)=state_lbl
max(mean_event)
install.packages("oce")
setwd("~/projects/vib_div/code/plot")
library(stringr)
library(ggmap)
library(reshape2)
library(dplyr)
library(maps)
library(Cairo)
library(ggforce)
library(oce)
clean_str = function(s) {
s = str_remove_all(s, pattern = "[()]")
s = unlist( str_split(s, pattern=" ") )
return(s)
}
get_bg_state = function(s) {
if      (s=="1")  return(c(1))
else if (s=="2")  return(c(2))
else if (s=="3")  return(c(3))
else if (s=="4")  return(c(4))
else if (s=="5")  return(c(5))
else if (s=="6")  return(c(6))
else if (s=="A")  return(c(1,2))
else if (s=="B")  return(c(1,3))
else if (s=="C")  return(c(2,3))
else if (s=="D") return(c(1,4))
else if (s=="E") return(c(2,4))
else if (s=="F") return(c(3,4))
else if (s=="G") return(c(1,5))
else if (s=="H") return(c(2,5))
else if (s=="I") return(c(3,5))
else if (s=="J") return(c(4,5))
else if (s=="K") return(c(1,6))
else if (s=="L") return(c(2,6))
else if (s=="M") return(c(3,6))
else if (s=="N") return(c(4,6))
else if (s=="O") return(c(5,6))
}
fp= "/Users/mlandis/projects/vib_div/"
dat_fp = paste(fp, "data/", sep="")
plot_fp = paste(fp, "code/plot/", sep="")
bg_fn = paste(dat_fp, "vib_bg_raw.txt", sep="")
biome_fn = paste(dat_fp, "vib_biomes_raw.txt", sep="")
taxa_fn = paste(dat_fp, "viburnum.taxa.tsv", sep="")
plot_fn = paste(plot_fp, "vib_map.pdf", sep="")
col_biome_fn = paste(plot_fp, "biome_colors.n4.txt",sep="")
col_bg_fn = paste(plot_fp, "range_colors.n6.txt",sep="")
col_biome = read.table(col_biome_fn,sep=",",header=T, stringsAsFactors=F)
col_bg = read.table(col_bg_fn,sep=",",header=T, stringsAsFactors=F)
dat_bg = readLines(bg_fn)
dat_biome = readLines(biome_fn)
taxa = read.csv(taxa_fn, sep="\t", stringsAsFactors=F)$taxon
taxa = taxa[1:163]
n_biomes=4
n_areas=6
n_taxa = length(taxa)
m = matrix(0, nrow=n_areas, ncol=n_biomes)
for (i in 1:length(dat_bg)) {
s_bg = clean_str( dat_bg[i] )
s_biome = clean_str( dat_biome[i] )
if (s_bg[1] != s_biome[1]) {
stop("Name mismatch!")
}
s_name  = s_bg[1]
x_bg    = s_bg[2:length(s_bg)]
n_bg    = 1/length(x_bg)
y_bg = c()
for (i in 1:length(x_bg)) {
y_bg = c(y_bg, as.numeric(get_bg_state(x_bg[i])))
}
#y_bg    = as.numeric( get_bg_state(x_bg) )
y_biome = as.numeric( s_biome[2:length(s_biome)] ) + 1
n_biome = 1/length(y_biome)
m[y_bg,y_biome] = m[y_bg,y_biome] + n_biome*n_bg
}
rownames(m)=c("SE Asia", "E Asia", "Europe", "N. America", "C. America", "S. America")
colnames(m)=c("Tropical", "Warm Temp.", "Cloud", "Cold Temp.")
mm = melt(m)
colnames(mm) = c("area","biome","count")
mm$lat = 0
mm$long = 0
#mm$area = as.vector( mm$area )
#mm$biome = as.vector( mm$biome )
mm$count = as.vector( as.integer(mm$count) )
mm$count[mm$count==0] = NA
rel_offset = 10
biome_offset = list( "Tropical"=c(0,0)*rel_offset,
"Warm Temp."=c(1,0)*rel_offset,
"Cloud"=c(2,0)*rel_offset,
"Cold Temp."=c(3,0)*rel_offset)
area_coords = list( "SE Asia"=c(100,10),
"E Asia"=c(95,45),
"Europe"=c(20,50),
"N. America"=c(-90,45),
"C. America"=c(-90,15),
"S. America"=c(-60,-15))
circle_dat = data.frame( matrix(unlist(area_coords),ncol=2,byrow=T) )
circle_dat$area = names(area_coords)
circle_dat$radius = c( 15, 23, 18, 20, 12, 15 )
circle_dat$area = factor( circle_dat$area, levels = names(area_coords), ordered=T)
colnames(circle_dat)=c("long","lat","area", "radius")
circle_dat$long[1] = 107
circle_dat$long[2] = 104
circle_dat$lat[2] = 48
circle_dat$long[3] = 26
circle_dat$lat[4] = 50
circle_dat$long[5] = -83
for (i in 1:nrow(mm)) {
a = mm$area[i]
b = mm$biome[i]
cat(a,b,"\n")
mm$long[i] = area_coords[[ a ]][1] #+ biome_offset[[ b ]][1]
mm$lat[i] = area_coords[[ a ]][2]# + biome_offset[[ b ]][2]
}
dx = 10
dy = 10
# SE Asia
mm$long[ c(1,7) ] = mm$long[ c(1,7) ] + c(0,1.36)*dx
# E Asia
mm$long[ c(2,8,20) ] = mm$long[ c(2,8,20) ] + c(0.5,0,2.75)*dx
mm$lat[ c(2,8,20) ] = mm$lat[ c(2,8,20) ] + c(-0.87,0,0)*dx
# Eur
mm$long[ c(9,21) ] = mm$long[ c(9,21) ] + c(0,1.45)*dx
# N Am
mm$long[ c(10,22) ] = mm$long[ c(10,22) ] + c(0,1.67)*dx
# C Am
mm$long[ c(11,17) ] = mm$long[ c(11,17) ] + c(0,1.25)*dx
m_fossil = data.frame(
locality=c("Northwest Territories","Paris Basin","Iceland","British Columbia","Florissant"),
clade=c("Valvatotinus","Valvatotinus","Valvatotinus","Viburnum","Viburnum"),
age=c(48,45,15,48,35),
lat =c( 79, 49, 65, 50, 39),
long=c(-91,  2,-18,-120, -105),
pollen_type=c("Ib","Ib","Ic","Ia","Ia"))
source('~/projects/vib_div/code/plot/plot_extant_diversity.R')
plot_fn
dev.off()
source('~/projects/vib_div/code/plot/plot_extant_diversity.R')
source('~/projects/vib_div/code/plot/plot_extant_diversity.R')
pp
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel",
"ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata")
)
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
install.packages(c("cowplot", "googleway", "ggplot2", "ggrepel", "ggspatial", "libwgeom", "sf", "rnaturalearth", "rnaturalearthdata"))
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
ggplot(data = world) +
geom_sf() +
coord_sf(crs = "+proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = ggplot(data = world)
p = p + geom_sf()
p = p + coord_sf(crs = "+proj=laea +lat_0=32 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf()
p = p + coord_sf(crs = "+proj=laea +lat_0=-152 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf()
p = p + coord_sf(crs = "+proj=laea +lat_0=32 +lon_0=-160 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf()
p = p + coord_sf(crs = "+proj=laea +lat_0=32 +lon_0=270 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf()
p = p + coord_sf(crs = "+proj=laea +lat_0=50 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf()
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
?geom_sf
p = ggplot(data = world)
p = p + geom_sf(size=1)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
?ne_countries
world <- ne_coastline(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0.2)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf(size=0.2, col="gray", fill="gray")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
?geom_sf
dev.off()
p = ggplot(data = world)
p = p + geom_sf(size=0.2, color="gray", fill="gray")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf(size=0.2, fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
world <- ne_countries(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0.2, fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
world <- ne_countries(scale = "large", returnclass = "sf")
0
p = ggplot(data = world)
p = p + geom_sf(size=0.2, fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
world <- ne_countries(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0.2, fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
world <- ne_coastline(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0.2, fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
world <- ne_coastline(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0.5, fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
world <- ne_coastline(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0.3, fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
?ne_coastline
?ne_countries
?ne_coastline
?ne_countries
?ne_states
?geom_sf
world <- ne_countries(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0.3, colour="antiquewhite",fill="antiquewhite")
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
coast <- ne_coastlines(scale = "medium", returnclass = "sf")
coast <- ne_coastline(scale = "medium", returnclass = "sf")
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p
p = p + theme(panel.grid.major = element_line(colour = 'transparent')
)
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.minor = element_line(colour = 'transparent'))
p
= ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=230 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=180 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=60 +lon_0=280 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=70 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=80 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=90 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=91 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=89 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
world
world$scalerank
world$labelrank
world$geounit
world
world %>% filter(region != "Antarctica")
world$region_un
world %>% filter(region_un != "Antarctica")
world %>% filter(!("Antarctica" %in% region_un))
world %>% filter(!identical(region_un,"Antarctica"))
world$region_wb
world %>% filter(region_un != "Antarctica")
?warnings()
warnings()
world$continent
world <- ne_countries(scale = "medium", returnclass = "sf")
world2 = subset(world, continent != "Antarctica")
coast2 = subset(coast, continent != "Antarctica")
coast <- ne_coastline(scale = "medium", returnclass = "sf")
p = ggplot(data = world2)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=89 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
p = ggplot(data = world2)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=89 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
#p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
library(ggplot2)
library(sf)
library("rnaturalearth")
library("rnaturalearthdata")
world <- ne_countries(scale = "medium", returnclass = "sf")
world2 = subset(world, continent != "Antarctica")
world
coast <- ne_coastline(scale = "medium", returnclass = "sf")
#coast2 = subset(coast, continent != "Antarctica")
p = ggplot(data = world2)
p = p + geom_sf(size=0, colour="antiquewhite",fill="antiquewhite")
p = p + geom_sf(data=coast, colour="black", size=0.3)
p = p + coord_sf(crs = "+proj=laea +lat_0=89 +lon_0=300 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs ")
p = p + theme(panel.grid.major = element_line(colour = 'transparent'))
p
pdf(plot_fn, height=7, width=7)
print(p)
dev.off()
